{"version":3,"sources":["services/persons.js","components/PersonDetails.js","components/PersonList.js","components/Search.js","components/AddPersons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","console","log","create","person","post","remove","id","delete","update","updatedObj","put","PersonDetails","deletePerson","className","onClick","name","number","PersonList","displayList","list","map","key","length","style","padding","Search","term","action","label","value","onChange","AddPersons","add","phone","handleName","handleNumber","onSubmit","type","disabled","Notification","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","notifyMessage","setNotifyMessage","notifyType","setNotifyType","useEffect","personsService","personList","error","fetchPersons","addPerson","event","preventDefault","newPerson","personExists","find","p","toLowerCase","returnedPerson","showNotification","clearAddFields","concat","personToRemove","window","confirm","status","filter","content","clearNotifications","setTimeout","searchList","includes","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAGMA,EAAU,eAsCD,GAAEC,OApCL,uCAAG,4BAAAC,EAAA,+EAEUC,IAAMC,IAAIJ,GAFpB,cAEPK,EAFO,yBAGJA,EAASC,MAHL,gCAKXC,QAAQC,IAAR,MALW,yDAAH,qDAoCaC,OA3Bb,uCAAG,WAAMC,GAAN,eAAAR,EAAA,+EAEYC,IAAMQ,KAAKX,EAASU,GAFhC,cAELL,EAFK,yBAGJA,EAASC,MAHL,gCAKXC,QAAQC,IAAR,MALW,yDAAH,sDA2BqBI,OAlBrB,uCAAG,WAAMC,GAAN,eAAAX,EAAA,+EAEYC,IAAMW,OAAN,UAAgBd,EAAhB,YAA2Ba,IAFvC,cAELR,EAFK,yBAGJA,GAHI,gCAKXE,QAAQC,IAAR,MALW,yDAAH,sDAkB6BO,OAT7B,uCAAG,WAAOF,EAAIG,GAAX,eAAAd,EAAA,+EAEYC,IAAMc,IAAN,UAAajB,EAAb,YAAwBa,GAAMG,GAF1C,cAELX,EAFK,yBAGJA,EAASC,MAHL,gCAKXC,QAAQC,IAAR,MALW,yDAAH,yDCnBGU,G,MATO,SAAC,GAA8B,IAA5BR,EAA2B,EAA3BA,OAAQS,EAAmB,EAAnBA,aAC/B,OACI,wBAAIC,UAAU,kBACZ,4BAAQA,UAAU,wBAAwBC,QAAS,kBAAMF,EAAaT,EAAOG,MAA7E,UACCH,EAAOY,KAFV,KAEkBZ,EAAOa,UCgBhBC,EArBI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaN,EAAmB,EAAnBA,aAI3BO,EAAOD,EACTA,EAAYE,KAAI,SAAAjB,GAAM,OAAI,kBAAC,EAAD,CAAekB,IAAKlB,EAAOG,GAAIH,OAAQA,EAAQS,aAAcA,OACvF,GACJ,OACE,6BACE,uCAEEO,EAAKG,OAAS,EACZ,wBAAIC,MAXM,CAChBC,QAAS,IAWCL,GAEJ,oDCPKM,EATA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACrB,OACE,yBAAKd,UAAU,UACb,sCACA,2BAAOe,MAAM,SAASC,MAAOH,EAAMI,SAAUH,MCepCI,EAnBI,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,IAAKjB,EAA4C,EAA5CA,KAAMkB,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAClD,OACE,yBAAKtB,UAAU,mBACb,2CACA,0BAAMuB,SAAUJ,GACd,sCACQ,2BAAOH,MAAOd,EAAMe,SAAUI,KAEtC,wCACU,2BAAOL,MAAOI,EAAOH,SAAUK,KAEzC,6BACE,4BAAQE,KAAK,SAASC,UAAYvB,EAAKO,SAAWW,EAAMX,QAAxD,WCAKiB,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASH,EAAW,EAAXA,KAC/B,OAAgB,OAAZG,EACK,KAIP,yBAAK3B,UAAqB,UAATwB,EAAmB,gBAAkB,mBACnDG,IC6JQC,G,MA5JH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERG,EAFQ,KAECC,EAFD,OAGoBJ,mBAAS,IAH7B,mBAGRK,EAHQ,KAGGC,EAHH,OAIcN,mBAAS,IAJvB,mBAIRO,EAJQ,KAIAC,EAJA,OAK2BR,mBAAS,MALpC,mBAKRS,EALQ,KAKOC,EALP,OAMsBV,mBAAS,MAN/B,mBAMRW,EANQ,KAMIC,EANJ,KAoBhBC,qBAZa,WAAM,4CACjB,4BAAA5D,EAAA,sEAC2B6D,EAAe9D,SAD1C,OACQ+D,EADR,OAEE,IACEb,EAAWa,GACX,MAAOC,GACP1D,QAAQC,IAAIyD,GALhB,4CADiB,uBAAC,WAAD,wBASjBC,KAGc,IAEhB,IAAMC,EAAS,uCAAG,WAAMC,GAAN,qBAAAlE,EAAA,yDAChBkE,EAAMC,iBACAC,EAAY,CAChBhD,KAAM8B,EACN7B,OAAQ+B,KAGNiB,EAAerB,EAAQsB,MAAK,SAAAC,GAAC,OAAIA,EAAEnD,KAAKoD,gBAAkBJ,EAAUhD,KAAKoD,kBAP7D,iCAUaX,EAAehD,OAAOwD,EAAa1D,GAAIyD,GAVpD,OAUVK,EAVU,OAWd,IACExB,EAAWD,EAAQvB,KAAI,SAAAjB,GAAM,OAAIA,EAAOG,KAAO0D,EAAa1D,GAAKH,EAASiE,MAC1EC,EAAiB,iBAAkBN,EAAUhD,MAC7CuD,IACA,MAAOZ,GACPW,EAAiB,eAAgBN,EAAUhD,MAC3Cf,QAAQC,IAAIyD,GACZY,IAlBY,yCAsBKd,EAAetD,OAAO6D,GAtB3B,QAsBV5D,EAtBU,OAuBd,IACEyC,EAAWD,EAAQ4B,OAAOpE,IAC1BkE,EAAiB,cAAelE,EAAOY,MACvCuD,IACA,MAAOZ,GACPW,EAAiB,YAAalE,EAAOY,MACrCuD,IA7BY,4CAAH,sDAkCT1D,EAAY,uCAAG,WAAMN,GAAN,iBAAAX,EAAA,yDACf6E,EAAiB7B,EAAQsB,MAAK,SAAAC,GAAC,OAAIA,EAAE5D,KAAOA,MAC5BmE,OAAOC,QAAP,uCAA+CF,EAAezD,KAA9D,OAFD,gCAKIyC,EAAenD,OAAOC,GAL1B,OAKbR,EALa,OAMjB,IAC0B,MAApBA,EAAS6E,SACX/B,EAAWD,EAAQiC,QAAO,SAAAV,GAAC,OAAIA,EAAE5D,KAAOA,MACxC+D,EAAiB,iBAAkBG,EAAezD,OAEpD,MAAO2C,GACPW,EAAiB,eAAgBG,EAAezD,MAChD6B,EAAWD,EAAQiC,QAAO,SAAAV,GAAC,OAAIA,EAAE5D,KAAOA,MACxCN,QAAQC,IAAIyD,GAdG,2CAAH,sDAmBZW,EAAmB,SAAChC,EAAMwC,GACjB,cAATxC,GACFe,EAAiB,oCACjBE,EAAc,SACdwB,KAEe,gBAATzC,GACNe,EAAiB,GAAD,OAAIyB,EAAJ,wBAChBvB,EAAc,WACdwB,KAEe,mBAATzC,GACNe,EAAiB,GAAD,OAAIyB,EAAJ,mBAChBvB,EAAc,WACdwB,KAEe,iBAATzC,GACNe,EAAiB,kBAAD,OAAmByB,IACnCvB,EAAc,SACdwB,KAEe,mBAATzC,GACNe,EAAiB,GAAD,OAAIyB,EAAJ,4BAChBvB,EAAc,WACdwB,KAEe,iBAATzC,IACNe,EAAiB,GAAD,OAAIyB,EAAJ,qCAChBvB,EAAc,SACdwB,MAIEA,EAAoB,WACxBC,YAAW,WACT3B,EAAiB,MACjBE,EAAc,QACb,OAGCgB,EAAiB,WACrBxB,EAAW,IACXE,EAAa,KAeT7B,EAAOwB,EACPqC,EAAarC,EACfA,EAAQiC,QAAO,SAAAV,GAAC,OAAIA,EAAEnD,KAAKoD,cAAcc,SAAShC,EAAOkB,kBACzD,GAEEjD,EAAc8D,EAAW1D,OAC3B0D,EACA7D,EAEJ,OACE,yBAAKN,UAAU,OACb,yCAEEsC,EACE,kBAAC,EAAD,CAAcX,QAASW,EAAed,KAAMgB,IAC5C,KAEJ,kBAAC,EAAD,CAAYrB,IAAK4B,EAAW7C,KAAM8B,EAASZ,MAAOc,EAAWb,WA7B3C,SAAA2B,GACpBf,EAAWe,EAAMqB,OAAOrD,QA4BkEM,aAzBpE,SAAA0B,GACtBb,EAAaa,EAAMqB,OAAOrD,UAyBxB,kBAAC,EAAD,CAAQH,KAAMuB,EAAQtB,OAtBL,SAAAkC,GACnBX,EAAUW,EAAMqB,OAAOrD,UAsBrB,kBAAC,EAAD,CAAYhB,UAAU,cAAcK,YAAaA,EAAaN,aAAcA,OC5JlFuE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.89f5c107.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/api/persons'\n// const baseUrl = 'https://rocky-crag-83679.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = async () => {\n  try {\n    let response = await axios.get(baseUrl)\n    return response.data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst create = async person => {\n  try {\n    const response = await axios.post(baseUrl, person)\n    return response.data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst remove = async id => {\n  try {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst update = async (id, updatedObj) => {\n  try {\n    const response = await axios.put(`${baseUrl}/${id}`, updatedObj)\n    return response.data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport default { getAll, create, remove, update }\n","import React from 'react'\n\nimport './PersonDetails.css'\n\nconst PersonDetails = ({ person, deletePerson }) => {\n  return (\n      <li className=\"person-details\">\n        <button className=\"person-details-button\" onClick={() => deletePerson(person.id)}>delete</button>\n        {person.name}: {person.number}\n      </li>\n  )\n}\n\nexport default PersonDetails\n","import React from 'react'\nimport PersonDetails from './PersonDetails'\n\nconst PersonList = ({ displayList, deletePerson }) => {\n  const listStyle = {\n    padding: 0\n  }\n  const list = displayList\n    ? displayList.map(person => <PersonDetails key={person.id} person={person} deletePerson={deletePerson} />)\n    : []\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {\n        list.length > 0\n        ? <ul style={listStyle}>\n            { list }\n          </ul>\n        : <p>No data from server</p>\n       }\n    </div>\n  )\n}\n\nexport default PersonList\n","import React from 'react'\n\nconst Search = ({term, action}) => {\n  return (\n    <div className=\"search\">\n      <h4>Search</h4>\n      <input label=\"Search\" value={term} onChange={action} />\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst AddPersons = ({ add, name, phone, handleName, handleNumber }) => {\n  return (\n    <div className=\"add-person-form\">\n      <h3>Add contact</h3>\n      <form onSubmit={add}>\n        <div>\n          name: <input value={name} onChange={handleName} />\n        </div>\n        <div>\n          number: <input value={phone} onChange={handleNumber} />\n        </div>\n        <div>\n          <button type=\"submit\" disabled={ !name.length || !phone.length ? true : false }>ADD</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddPersons\n","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={ type === 'error' ? 'error-message' : 'success-message'}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\n\nimport PersonList from './components/PersonList'\nimport Search from './components/Search'\nimport AddPersons from './components/AddPersons'\nimport Notification from './components/Notification'\n\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ notifyMessage, setNotifyMessage] = useState(null)\n  const [ notifyType, setNotifyType ] = useState(null)\n\n  const hook = () => {\n    async function fetchPersons() {\n      const personList = await personsService.getAll()\n      try {\n        setPersons(personList)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchPersons()\n  }\n\n  useEffect(hook, [])\n\n  const addPerson = async event => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    let personExists = persons.find(p => p.name.toLowerCase() === newPerson.name.toLowerCase())\n\n    if(personExists) {\n      let returnedPerson = await personsService.update(personExists.id, newPerson)\n      try {\n        setPersons(persons.map(person => person.id !== personExists.id ? person : returnedPerson))\n        showNotification('update-success', newPerson.name)\n        clearAddFields()\n      } catch (error) {\n        showNotification('update-error', newPerson.name)\n        console.log(error)\n        clearAddFields()\n      }\n    }\n    else {\n      let person = await personsService.create(newPerson)\n      try {\n        setPersons(persons.concat(person))\n        showNotification('add-success', person.name)\n        clearAddFields()\n      } catch (error) {\n        showNotification('add-error', person.name)\n        clearAddFields()\n      }\n    }\n  }\n\n  const deletePerson = async id => {\n    let personToRemove = persons.find(p => p.id === id)\n    let deleteMessage = window.confirm(`Do you really want to remove ${personToRemove.name} ?`)\n\n    if (deleteMessage) {\n      let response = await personsService.remove(id)\n      try {\n        if (response.status === 200) {\n          setPersons(persons.filter(p => p.id !== id))\n          showNotification('delete-success', personToRemove.name)\n        }\n      } catch (error) {\n        showNotification('delete-error', personToRemove.name)\n        setPersons(persons.filter(p => p.id !== id))\n        console.log(error)\n      }\n    }\n  }\n\n  const showNotification = (type, content) => {\n    if (type === 'add-error') {\n      setNotifyMessage('Error adding person to Phonebook')\n      setNotifyType('error')\n      clearNotifications()\n    }\n    else if(type === 'add-success') {\n      setNotifyMessage(`${content} added to Phonebook`)\n      setNotifyType('success')\n      clearNotifications()\n    }\n    else if(type === 'update-success') {\n      setNotifyMessage(`${content} phone updated`)\n      setNotifyType('success')\n      clearNotifications()\n    }\n    else if(type === 'update-error') {\n      setNotifyMessage(`Error updating ${content}`)\n      setNotifyType('error')\n      clearNotifications()\n    }\n    else if(type === 'delete-success') {\n      setNotifyMessage(`${content} removed from Phonebook`)\n      setNotifyType('success')\n      clearNotifications()\n    }\n    else if(type === 'delete-error') {\n      setNotifyMessage(`${content} information not found on server`)\n      setNotifyType('error')\n      clearNotifications()\n    }\n  }\n\n  const clearNotifications =() => {\n    setTimeout(() => {\n      setNotifyMessage(null)\n      setNotifyType(null)\n    }, 4800);\n  }\n\n  const clearAddFields = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNewName = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = event => {\n    setSearch(event.target.value)\n  }\n\n  const list = persons\n  const searchList = persons\n    ? persons.filter(p => p.name.toLowerCase().includes(search.toLowerCase()))\n    : []\n\n  const displayList = searchList.length\n    ? searchList\n    : list\n\n  return (\n    <div className=\"app\">\n      <h1>Phonebook</h1>\n      {\n        notifyMessage\n        ? <Notification message={notifyMessage} type={notifyType} />\n        : null\n      }\n      <AddPersons add={addPerson} name={newName} phone={newNumber} handleName={handleNewName} handleNumber={handleNewNumber} />\n      <Search term={search} action={handleSearch}/>\n      <PersonList className=\"person-list\" displayList={displayList} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}